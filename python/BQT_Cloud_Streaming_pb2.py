# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: BQT_Cloud_Streaming.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x19\x42QT_Cloud_Streaming.proto\x12\x05pulse\"\xca\x04\n\nBQTMessage\x12\x10\n\x08msg_type\x18\x01 \x02(\r\x12\x1d\n\x05trade\x18\x02 \x01(\x0b\x32\x0c.pulse.TradeH\x00\x12,\n\ntrade_corr\x18\x03 \x01(\x0b\x32\x16.pulse.TradeCorrectionH\x00\x12.\n\x0ctrade_cancel\x18\x04 \x01(\x0b\x32\x16.pulse.TradeCancelBustH\x00\x12.\n\x0bprior_trade\x18\x05 \x01(\x0b\x32\x17.pulse.TrfPriorDayTradeH\x00\x12;\n\x12prior_trade_cancel\x18\x06 \x01(\x0b\x32\x1d.pulse.TrfPriorDayTradeCancelH\x00\x12\x1d\n\x05quote\x18\x07 \x01(\x0b\x32\x0c.pulse.QuoteH\x00\x12\x35\n\x12single_sided_quote\x18\x08 \x01(\x0b\x32\x17.pulse.SingleSidedQuoteH\x00\x12.\n\x0esymbol_mapping\x18\t \x01(\x0b\x32\x14.pulse.SymbolMappingH\x00\x12\x30\n\x0fsecurity_status\x18\n \x01(\x0b\x32\x15.pulse.SecurityStatusH\x00\x12*\n\x0csymbol_clear\x18\x0b \x01(\x0b\x32\x12.pulse.SymbolClearH\x00\x12-\n\x08\x63ons_vol\x18\x0c \x01(\x0b\x32\x19.pulse.ConsolidatedVolumeH\x00\x12\"\n\x03ssm\x18\r \x01(\x0b\x32\x13.pulse.StockSummaryH\x00\x42\t\n\x07payload\"\x90\x03\n\x0cStockSummary\x12\x12\n\nfeedmsgseq\x18\x01 \x01(\x04\x12\x12\n\nsourcetime\x18\x02 \x01(\x04\x12\x0e\n\x06symbol\x18\x03 \x01(\t\x12\x0f\n\x07hiprice\x18\x04 \x01(\x01\x12\x0f\n\x07loprice\x18\x05 \x01(\x01\x12\x1b\n\x13listingmktopenprice\x18\x06 \x01(\x01\x12\x0e\n\x06grpvol\x18\x07 \x01(\r\x12\x14\n\x0cmktofhiprice\x18\x08 \x01(\t\x12\x14\n\x0cmktofloprice\x18\t \x01(\t\x12\x16\n\x0emktofopenprice\x18\n \x01(\t\x12\x13\n\x0bnumclsprice\x18\x0b \x01(\r\x12\x17\n\x0fmktofcloseprice\x18\x0c \x01(\t\x12\x1c\n\x14listingmktcloseprice\x18\r \x01(\x01\x12\x13\n\x0b\x63onshiprice\x18\x0e \x01(\x01\x12\x13\n\x0b\x63onsloprice\x18\x0f \x01(\x01\x12\x16\n\x0e\x63onsfirstprice\x18\x10 \x01(\x01\x12\x15\n\rconslastprice\x18\x11 \x01(\x01\x12\x10\n\x08\x63omplete\x18\x12 \x01(\t\"k\n\x12\x43onsolidatedVolume\x12\x12\n\nfeedmsgseq\x18\x01 \x01(\x04\x12\x0e\n\x06symbol\x18\x02 \x01(\t\x12\x0f\n\x07\x63onsvol\x18\x03 \x01(\x04\x12\x0e\n\x06reason\x18\x04 \x01(\t\x12\x10\n\x08\x63omplete\x18\x05 \x01(\t\"\xe9\x01\n\x05Quote\x12\x12\n\nfeedmsgseq\x18\x01 \x01(\x04\x12\x0e\n\x06symbol\x18\x02 \x01(\t\x12\x10\n\x08\x61skprice\x18\x03 \x01(\x01\x12\x11\n\taskvolume\x18\x04 \x01(\r\x12\x10\n\x08\x62idprice\x18\x05 \x01(\x01\x12\x11\n\tbidvolume\x18\x06 \x01(\r\x12\x14\n\x0c\x61skcondition\x18\x07 \x01(\t\x12\x14\n\x0c\x62idcondition\x18\x08 \x01(\t\x12\x1c\n\x14retailpriceindicator\x18\t \x01(\t\x12\x13\n\x0b\x61skmarketid\x18\n \x01(\t\x12\x13\n\x0b\x62idmarketid\x18\x0b \x01(\t\"\xa6\x01\n\x10SingleSidedQuote\x12\x12\n\nfeedmsgseq\x18\x01 \x01(\x04\x12\x0e\n\x06symbol\x18\x02 \x01(\t\x12\x0c\n\x04side\x18\x03 \x01(\t\x12\r\n\x05price\x18\x04 \x01(\x01\x12\x0e\n\x06volume\x18\x05 \x01(\r\x12\x11\n\tcondition\x18\x06 \x01(\t\x12\x1c\n\x14retailpriceindicator\x18\x07 \x01(\t\x12\x10\n\x08marketid\x18\x08 \x01(\t\"\xfa\x01\n\x0eSecurityStatus\x12\x12\n\nfeedmsgseq\x18\x01 \x01(\x04\x12\x12\n\nsourcetime\x18\x02 \x01(\x04\x12\x0e\n\x06symbol\x18\x03 \x01(\t\x12\x16\n\x0esecuritystatus\x18\x04 \x01(\t\x12\x10\n\x08haltcond\x18\x05 \x01(\t\x12\x10\n\x08marketid\x18\x06 \x01(\t\x12\x0e\n\x06price1\x18\x07 \x01(\x01\x12\x0e\n\x06price2\x18\x08 \x01(\x01\x12\x0f\n\x07ssrexch\x18\t \x01(\t\x12\x0e\n\x06ssrvol\x18\n \x01(\r\x12\x0c\n\x04time\x18\x0b \x01(\r\x12\x10\n\x08ssrstate\x18\x0c \x01(\t\x12\x13\n\x0bmarketstate\x18\r \x01(\t\"\xaa\x02\n\rSymbolMapping\x12\x12\n\nfeedmsgseq\x18\x01 \x01(\x04\x12\x10\n\x08symbolid\x18\x02 \x01(\r\x12\x0e\n\x06symbol\x18\x03 \x01(\t\x12\x10\n\x08marketid\x18\x04 \x01(\t\x12\x10\n\x08systemid\x18\x05 \x01(\r\x12\x10\n\x08\x65xchcode\x18\x06 \x01(\t\x12\x12\n\npricescale\x18\x07 \x01(\r\x12\x14\n\x0csecuritytype\x18\x08 \x01(\t\x12\x0f\n\x07lotsize\x18\t \x01(\r\x12\x15\n\rprecloseprice\x18\n \x01(\x01\x12\x13\n\x0bpreclosevol\x18\x0b \x01(\r\x12\x10\n\x08priceres\x18\x0c \x01(\t\x12\x12\n\nroundlotac\x18\r \x01(\t\x12\x0b\n\x03mpv\x18\x0e \x01(\x01\x12\x13\n\x0bunitoftrade\x18\x0f \x01(\r\"n\n\x0bSymbolClear\x12\x12\n\nfeedmsgseq\x18\x01 \x01(\x04\x12\x12\n\nsourcetime\x18\x02 \x01(\x04\x12\x0e\n\x06symbol\x18\x03 \x01(\t\x12\x15\n\rnextsourceseq\x18\x04 \x01(\r\x12\x10\n\x08marketid\x18\x05 \x01(\t\"\xc7\x02\n\x05Trade\x12\x12\n\nfeedmsgseq\x18\x01 \x01(\x04\x12\x12\n\nsourcetime\x18\x02 \x01(\x04\x12\x0e\n\x06symbol\x18\x03 \x01(\t\x12\x0f\n\x07tradeid\x18\x04 \x01(\r\x12\r\n\x05price\x18\x05 \x01(\x01\x12\x0e\n\x06volume\x18\x06 \x01(\r\x12\x17\n\x0ftradecondition1\x18\x07 \x01(\t\x12\x17\n\x0ftradecondition2\x18\x08 \x01(\t\x12\x17\n\x0ftradecondition3\x18\t \x01(\t\x12\x17\n\x0ftradecondition4\x18\n \x01(\t\x12\x10\n\x08marketid\x18\x0b \x01(\t\x12\x15\n\rfh_sourcetime\x18\x0c \x01(\x04\x12\x17\n\x0f\x66h_sourcetimeNS\x18\r \x01(\x04\x12\x16\n\x0epps_sourcetime\x18\x0e \x01(\x04\x12\x18\n\x10pps_sourcetimeNS\x18\x0f \x01(\x04\"\x84\x02\n\x0fTradeCorrection\x12\x12\n\nfeedmsgseq\x18\x01 \x01(\x04\x12\x12\n\nsourcetime\x18\x02 \x01(\x04\x12\x0e\n\x06symbol\x18\x03 \x01(\t\x12\x13\n\x0borigtradeid\x18\x04 \x01(\r\x12\x0f\n\x07tradeid\x18\x05 \x01(\r\x12\r\n\x05price\x18\x06 \x01(\x01\x12\x0e\n\x06volume\x18\x07 \x01(\r\x12\x17\n\x0ftradecondition1\x18\x08 \x01(\t\x12\x17\n\x0ftradecondition2\x18\t \x01(\t\x12\x17\n\x0ftradecondition3\x18\n \x01(\t\x12\x17\n\x0ftradecondition4\x18\x0b \x01(\t\x12\x10\n\x08marketid\x18\x0c \x01(\t\"p\n\x0fTradeCancelBust\x12\x12\n\nfeedmsgseq\x18\x01 \x01(\x04\x12\x12\n\nsourcetime\x18\x02 \x01(\x04\x12\x0e\n\x06symbol\x18\x03 \x01(\t\x12\x13\n\x0borigtradeid\x18\x04 \x01(\r\x12\x10\n\x08marketid\x18\x05 \x01(\t\"\xf4\x01\n\x10TrfPriorDayTrade\x12\x12\n\nfeedmsgseq\x18\x01 \x01(\x04\x12\x12\n\nsourcetime\x18\x02 \x01(\x04\x12\x0e\n\x06symbol\x18\x03 \x01(\t\x12\x0f\n\x07tradeid\x18\x04 \x01(\r\x12\r\n\x05price\x18\x05 \x01(\x01\x12\x0e\n\x06volume\x18\x06 \x01(\r\x12\x17\n\x0ftradecondition1\x18\x07 \x01(\t\x12\x17\n\x0ftradecondition2\x18\x08 \x01(\t\x12\x17\n\x0ftradecondition3\x18\t \x01(\t\x12\x17\n\x0ftradecondition4\x18\n \x01(\t\x12\x14\n\x0cpriordaytime\x18\x0b \x01(\x04\"\x96\x01\n\x16TrfPriorDayTradeCancel\x12\x12\n\nfeedmsgseq\x18\x01 \x01(\x04\x12\x12\n\nsourcetime\x18\x02 \x01(\x04\x12\x0e\n\x06symbol\x18\x03 \x01(\t\x12\x0f\n\x07tradeid\x18\x04 \x01(\r\x12\r\n\x05price\x18\x05 \x01(\x01\x12\x0e\n\x06volume\x18\x06 \x01(\r\x12\x14\n\x0cpriordaytime\x18\x07 \x01(\x04')



_BQTMESSAGE = DESCRIPTOR.message_types_by_name['BQTMessage']
_STOCKSUMMARY = DESCRIPTOR.message_types_by_name['StockSummary']
_CONSOLIDATEDVOLUME = DESCRIPTOR.message_types_by_name['ConsolidatedVolume']
_QUOTE = DESCRIPTOR.message_types_by_name['Quote']
_SINGLESIDEDQUOTE = DESCRIPTOR.message_types_by_name['SingleSidedQuote']
_SECURITYSTATUS = DESCRIPTOR.message_types_by_name['SecurityStatus']
_SYMBOLMAPPING = DESCRIPTOR.message_types_by_name['SymbolMapping']
_SYMBOLCLEAR = DESCRIPTOR.message_types_by_name['SymbolClear']
_TRADE = DESCRIPTOR.message_types_by_name['Trade']
_TRADECORRECTION = DESCRIPTOR.message_types_by_name['TradeCorrection']
_TRADECANCELBUST = DESCRIPTOR.message_types_by_name['TradeCancelBust']
_TRFPRIORDAYTRADE = DESCRIPTOR.message_types_by_name['TrfPriorDayTrade']
_TRFPRIORDAYTRADECANCEL = DESCRIPTOR.message_types_by_name['TrfPriorDayTradeCancel']
BQTMessage = _reflection.GeneratedProtocolMessageType('BQTMessage', (_message.Message,), {
  'DESCRIPTOR' : _BQTMESSAGE,
  '__module__' : 'BQT_Cloud_Streaming_pb2'
  # @@protoc_insertion_point(class_scope:pulse.BQTMessage)
  })
_sym_db.RegisterMessage(BQTMessage)

StockSummary = _reflection.GeneratedProtocolMessageType('StockSummary', (_message.Message,), {
  'DESCRIPTOR' : _STOCKSUMMARY,
  '__module__' : 'BQT_Cloud_Streaming_pb2'
  # @@protoc_insertion_point(class_scope:pulse.StockSummary)
  })
_sym_db.RegisterMessage(StockSummary)

ConsolidatedVolume = _reflection.GeneratedProtocolMessageType('ConsolidatedVolume', (_message.Message,), {
  'DESCRIPTOR' : _CONSOLIDATEDVOLUME,
  '__module__' : 'BQT_Cloud_Streaming_pb2'
  # @@protoc_insertion_point(class_scope:pulse.ConsolidatedVolume)
  })
_sym_db.RegisterMessage(ConsolidatedVolume)

Quote = _reflection.GeneratedProtocolMessageType('Quote', (_message.Message,), {
  'DESCRIPTOR' : _QUOTE,
  '__module__' : 'BQT_Cloud_Streaming_pb2'
  # @@protoc_insertion_point(class_scope:pulse.Quote)
  })
_sym_db.RegisterMessage(Quote)

SingleSidedQuote = _reflection.GeneratedProtocolMessageType('SingleSidedQuote', (_message.Message,), {
  'DESCRIPTOR' : _SINGLESIDEDQUOTE,
  '__module__' : 'BQT_Cloud_Streaming_pb2'
  # @@protoc_insertion_point(class_scope:pulse.SingleSidedQuote)
  })
_sym_db.RegisterMessage(SingleSidedQuote)

SecurityStatus = _reflection.GeneratedProtocolMessageType('SecurityStatus', (_message.Message,), {
  'DESCRIPTOR' : _SECURITYSTATUS,
  '__module__' : 'BQT_Cloud_Streaming_pb2'
  # @@protoc_insertion_point(class_scope:pulse.SecurityStatus)
  })
_sym_db.RegisterMessage(SecurityStatus)

SymbolMapping = _reflection.GeneratedProtocolMessageType('SymbolMapping', (_message.Message,), {
  'DESCRIPTOR' : _SYMBOLMAPPING,
  '__module__' : 'BQT_Cloud_Streaming_pb2'
  # @@protoc_insertion_point(class_scope:pulse.SymbolMapping)
  })
_sym_db.RegisterMessage(SymbolMapping)

SymbolClear = _reflection.GeneratedProtocolMessageType('SymbolClear', (_message.Message,), {
  'DESCRIPTOR' : _SYMBOLCLEAR,
  '__module__' : 'BQT_Cloud_Streaming_pb2'
  # @@protoc_insertion_point(class_scope:pulse.SymbolClear)
  })
_sym_db.RegisterMessage(SymbolClear)

Trade = _reflection.GeneratedProtocolMessageType('Trade', (_message.Message,), {
  'DESCRIPTOR' : _TRADE,
  '__module__' : 'BQT_Cloud_Streaming_pb2'
  # @@protoc_insertion_point(class_scope:pulse.Trade)
  })
_sym_db.RegisterMessage(Trade)

TradeCorrection = _reflection.GeneratedProtocolMessageType('TradeCorrection', (_message.Message,), {
  'DESCRIPTOR' : _TRADECORRECTION,
  '__module__' : 'BQT_Cloud_Streaming_pb2'
  # @@protoc_insertion_point(class_scope:pulse.TradeCorrection)
  })
_sym_db.RegisterMessage(TradeCorrection)

TradeCancelBust = _reflection.GeneratedProtocolMessageType('TradeCancelBust', (_message.Message,), {
  'DESCRIPTOR' : _TRADECANCELBUST,
  '__module__' : 'BQT_Cloud_Streaming_pb2'
  # @@protoc_insertion_point(class_scope:pulse.TradeCancelBust)
  })
_sym_db.RegisterMessage(TradeCancelBust)

TrfPriorDayTrade = _reflection.GeneratedProtocolMessageType('TrfPriorDayTrade', (_message.Message,), {
  'DESCRIPTOR' : _TRFPRIORDAYTRADE,
  '__module__' : 'BQT_Cloud_Streaming_pb2'
  # @@protoc_insertion_point(class_scope:pulse.TrfPriorDayTrade)
  })
_sym_db.RegisterMessage(TrfPriorDayTrade)

TrfPriorDayTradeCancel = _reflection.GeneratedProtocolMessageType('TrfPriorDayTradeCancel', (_message.Message,), {
  'DESCRIPTOR' : _TRFPRIORDAYTRADECANCEL,
  '__module__' : 'BQT_Cloud_Streaming_pb2'
  # @@protoc_insertion_point(class_scope:pulse.TrfPriorDayTradeCancel)
  })
_sym_db.RegisterMessage(TrfPriorDayTradeCancel)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _BQTMESSAGE._serialized_start=37
  _BQTMESSAGE._serialized_end=623
  _STOCKSUMMARY._serialized_start=626
  _STOCKSUMMARY._serialized_end=1026
  _CONSOLIDATEDVOLUME._serialized_start=1028
  _CONSOLIDATEDVOLUME._serialized_end=1135
  _QUOTE._serialized_start=1138
  _QUOTE._serialized_end=1371
  _SINGLESIDEDQUOTE._serialized_start=1374
  _SINGLESIDEDQUOTE._serialized_end=1540
  _SECURITYSTATUS._serialized_start=1543
  _SECURITYSTATUS._serialized_end=1793
  _SYMBOLMAPPING._serialized_start=1796
  _SYMBOLMAPPING._serialized_end=2094
  _SYMBOLCLEAR._serialized_start=2096
  _SYMBOLCLEAR._serialized_end=2206
  _TRADE._serialized_start=2209
  _TRADE._serialized_end=2536
  _TRADECORRECTION._serialized_start=2539
  _TRADECORRECTION._serialized_end=2799
  _TRADECANCELBUST._serialized_start=2801
  _TRADECANCELBUST._serialized_end=2913
  _TRFPRIORDAYTRADE._serialized_start=2916
  _TRFPRIORDAYTRADE._serialized_end=3160
  _TRFPRIORDAYTRADECANCEL._serialized_start=3163
  _TRFPRIORDAYTRADECANCEL._serialized_end=3313
# @@protoc_insertion_point(module_scope)
